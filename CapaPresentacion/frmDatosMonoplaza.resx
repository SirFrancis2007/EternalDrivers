<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>